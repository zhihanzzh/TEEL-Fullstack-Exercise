# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - main
  - release
  - test/*

pr:
  branches:
    include:
      - main
      - release

pool:
  vmImage: ubuntu-latest

stages:
  - stage: DeployApplication
    condition:  |
      or(
        and(
          eq(variables['Build.Reason'], 'PullRequest'),
          eq(variables['System.PullRequest.TargetBranch'], 'main')
        ),
        in(variables['Build.SourceBranch'], 'refs/heads/main', 'refs/heads/release')
      )
    jobs:
      - job: DeployStagingArtifacts
        condition: |
          and
          (
            eq(variables['Build.Reason'], 'IndividualCI'),
            eq(variables['Build.SourceBranchName'], 'main')
          )
        steps:
        - script: echo "DeployStagingArtifacts Stage is running"

      - job: DeployQAArtifacts
        condition: |
          and
          (
            eq(variables['Build.Reason'], 'PullRequest'),
            eq(variables['System.PullRequest.TargetBranch'], 'main')
          )
        steps:
        - script: echo "DeployQAArtifacts Stage is running"

      - job: DeployProductionArtifacts
        condition: |
          and
          (
            eq(variables['Build.Reason'], 'IndividualCI'),
            eq(variables['Build.SourceBranchName'], 'release')
          )
        steps:
        - script: echo "DeployProductionArtifacts Stage is running"

      - job: UploadArtifacts
        dependsOn: [DeployQAArtifacts, DeployProductionArtifacts, DeployStagingArtifacts]
        condition: |
          or
          (
            in(dependencies.DeployQAArtifacts.result, 'Succeeded', 'SucceededWithIssues'),
            in(dependencies.DeployProductionArtifacts.result, 'Succeeded', 'SucceededWithIssues'),
            in(dependencies.DeployStagingArtifacts.result, 'Succeeded', 'SucceededWithIssues')
          )
        steps:
        - script: echo "UploadArtifacts Stage is running"
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'pipelinetest_yaml'
            publishLocation: 'Container'

  - stage: E2ETest
    displayName: 'E2E Test'
    condition: |
      and(
        eq(variables['Build.Reason'], 'PullRequest'),
        eq(variables['System.PullRequest.SourceBranch'], 'main'),
        eq(variables['System.PullRequest.TargetBranch'], 'release')
      )
    jobs:
      - job: CypressE2ETest
        displayName: 'Cypress E2E Test'
        steps:
          - script: echo "E2ETest Stage is running"
            
            
  - stage: UnitTest
    displayName: 'E2E Test'
    condition: |
      and(
        eq(variables['Build.Reason'], 'PullRequest'),
        eq(variables['System.PullRequest.SourceBranch'], 'test/unit-test'),
        eq(variables['System.PullRequest.TargetBranch'], 'main')
      )
    jobs:
      - job: CypressE2ETest
        displayName: 'Cypress E2E Test'
        steps:
          # Step 1: Checkout Code
          - task: Checkout@1

          # Step 2: Setup JDK
          - task: UseJavaVersion@1
            inputs:
              version: '11'  # Specify your required Java version, e.g., '11' or '17'
              architecture: 'x64'

          # Step 3: Navigate to Backend and Run Tests
          - script: |
              cd backend
              mvn clean test
            displayName: 'Run Unit Tests and Generate JaCoCo Coverage Report'

          # Step 4: Publish Unit Test Results
          - task: PublishTestResults@2
            inputs:
              testResultsFiles: 'backend/target/surefire-reports/*.xml'
              failTaskOnFailedTests: true
            displayName: 'Publish Unit Test Results'

          # Step 5: Publish JaCoCo Code Coverage Report
          - task: PublishCodeCoverageResults@1
            inputs:
              codeCoverageTool: 'JaCoCo'
              summaryFileLocation: 'backend/target/site/jacoco/jacoco.xml'
              reportDirectory: 'backend/target/site/jacoco'
            displayName: 'Publish Code Coverage Results'